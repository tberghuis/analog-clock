{"version":3,"sources":["time.js","Clock.js","index.js"],"names":["getTime","hours","date","Date","getHours","minutes","getMinutes","seconds","getSeconds","Clock","useState","time","setTime","useEffect","interval","setInterval","clearInterval","useTime","Svg","viewBox","transform","Frame","r","minuteMarkers","map","m","i","Fragment","key","drawMinuteMarker","fiveMinuteMarkers","draw5MinMarker","hourLabels","l","drawHourLabel","HoursHand","strokeWidth","x1","y1","x2","y2","MinutesHand","SecondsHand","fill","styled","svg","circle","g","Array","from","x","filter","markerIndexToRadians","markerIndex","Math","PI","style","stroke","cos","sin","label","hourLabelIndex","textAnchor","alignmentBaseline","dominantBaseline","y","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.837972f5.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst dateToTimeObject = date => {\n  const hours = date.getHours();\n  const minutes = date.getMinutes();\n  const seconds = date.getSeconds();\n  return { hours, minutes, seconds };\n};\n\nconst getTime = () => dateToTimeObject(new Date());\n\nexport const useTime = () => {\n  const [time, setTime] = useState(getTime());\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setTime(getTime());\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  return time;\n};\n","import React from \"react\";\nimport { useTime } from \"./time\";\nimport styled from \"styled-components\";\n\nconst Clock = () => {\n  const { hours, minutes, seconds } = useTime();\n\n  return (\n    <Svg viewBox=\"0 0 300 300\">\n      <g transform=\"translate(150,150)\">\n        <Frame r=\"110\" />\n\n        {minuteMarkers.map((m, i) => (\n          <React.Fragment key={i}>{drawMinuteMarker(m)}</React.Fragment>\n        ))}\n        {fiveMinuteMarkers.map((m, i) => (\n          <React.Fragment key={i}>{draw5MinMarker(m)}</React.Fragment>\n        ))}\n        {hourLabels.map((l, i) => (\n          <React.Fragment key={i}>{drawHourLabel(l, i)}</React.Fragment>\n        ))}\n\n        <HoursHand\n          transform={`rotate(${hours * 30 + (minutes / 60) * 30},0,0)`}\n        >\n          <line strokeWidth=\"4\" x1=\"0\" y1=\"15\" x2=\"0\" y2=\"-60\" />\n        </HoursHand>\n\n        <MinutesHand transform={`rotate(${minutes * 6},0,0)`}>\n          <line strokeWidth=\"2\" x1=\"0\" y1=\"20\" x2=\"0\" y2=\"-80\" />\n        </MinutesHand>\n\n        <SecondsHand transform={`rotate(${seconds * 6},0,0)`}>\n          <line x1=\"0\" y1=\"30\" x2=\"0\" y2=\"-100\" />\n        </SecondsHand>\n        <circle fill=\"red\" r=\"3\" />\n      </g>\n    </Svg>\n  );\n};\nexport default Clock;\n\nconst Svg = styled.svg`\n  /* background-color: pink; */\n  max-width: 500px;\n  display: block;\n  margin: 0 auto;\n`;\n\nconst Frame = styled.circle`\n  stroke: black;\n  fill: transparent;\n  stroke-width: 10;\n`;\n\nconst SecondsHand = styled.g`\n  stroke: red;\n`;\nconst MinutesHand = styled.g`\n  stroke: black;\n`;\nconst HoursHand = styled.g`\n  stroke: black;\n`;\n\nconst minuteMarkers = Array.from(new Array(60), (x, i) => i);\nconst fiveMinuteMarkers = minuteMarkers.filter(m => m % 5 === 0);\n\nconst markerIndexToRadians = markerIndex => (Math.PI * markerIndex) / 30;\n\nconst drawMinuteMarker = markerIndex => {\n  return (\n    <g style={{ stroke: \"black\" }}>\n      <line\n        x1={94 * Math.cos(markerIndexToRadians(markerIndex))}\n        y1={94 * Math.sin(markerIndexToRadians(markerIndex))}\n        x2={100 * Math.cos(markerIndexToRadians(markerIndex))}\n        y2={100 * Math.sin(markerIndexToRadians(markerIndex))}\n      />\n    </g>\n  );\n};\n\nconst draw5MinMarker = markerIndex => {\n  return (\n    <g style={{ stroke: \"black\" }}>\n      <line\n        strokeWidth=\"2\"\n        x1={90 * Math.cos(markerIndexToRadians(markerIndex))}\n        y1={90 * Math.sin(markerIndexToRadians(markerIndex))}\n        x2={100 * Math.cos(markerIndexToRadians(markerIndex))}\n        y2={100 * Math.sin(markerIndexToRadians(markerIndex))}\n      />\n    </g>\n  );\n};\n\nconst hourLabels = [\n  \"3\",\n  \"4\",\n  \"5\",\n  \"6\",\n  \"7\",\n  \"8\",\n  \"9\",\n  \"10\",\n  \"11\",\n  \"12\",\n  \"1\",\n  \"2\"\n];\n\nconst drawHourLabel = (label, hourLabelIndex) => {\n  return (\n    <text\n      textAnchor=\"middle\"\n      alignmentBaseline=\"central\"\n      dominantBaseline=\"central\"\n      x={80 * Math.cos(markerIndexToRadians(hourLabelIndex * 5))}\n      y={80 * Math.sin(markerIndexToRadians(hourLabelIndex * 5))}\n    >\n      {label}\n    </text>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Clock from \"./Clock\";\n\nReactDOM.render(<Clock />, document.getElementById(\"root\"));\n"],"sourceRoot":""}